{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comps/li-input/li-input.component.ts","webpack:///src/app/comps/li-input/li-input.component.html","webpack:///src/app/comps/ul-result/ul-result.component.ts","webpack:///src/app/comps/ul-result/ul-result.component.html","webpack:///src/app/serviees/inputer.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","LiInputComponent","inputerSvc","num1","resulte","number","value","String","eval","inputArr","push","add","UlResultComponent","InputerService","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'calculator';\n}\n","<app-li-input></app-li-input>\r\n<app-ul-result></app-ul-result>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LiInputComponent } from './comps/li-input/li-input.component';\nimport { UlResultComponent } from './comps/ul-result/ul-result.component';\nimport{FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LiInputComponent,\n    UlResultComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { InputerService } from 'src/app/serviees/inputer.service';\n\n@Component({\n  selector: 'app-li-input',\n  templateUrl: './li-input.component.html',\n  styleUrls: ['./li-input.component.css']\n})\nexport class LiInputComponent implements OnInit {\n\n  constructor(private inputerSvc:InputerService) { }\n\n  num1: string ='';\n  resulte: string ='';\n  number: string ='';\n\n  add(value: string){\n    if (value == '=') {\n    \n      \n      this.number=this.num1 + '='+ String(eval(this.num1));\n      this.resulte =(eval(this.num1));\n      this.inputerSvc.inputArr.push(this.number);\n\n      this.number=''\n      this.num1=''\n      return\n    }\n    this.num1+= value;\n  }\n\n\n  ngOnInit(): void {}\n  \n}\n","\n<div id=\"inputer\" >\n    <input type=\"string\" [(ngModel)]=\"num1\" id=\"myInput\">\n    </div>\n\n\n<div class=\"opertorim\">\n<button id=\"butten\" (click)='add(\"+\")'>+</button>\n<button id=\"butten\" (click)='add(\"-\")'>-</button>\n<button id=\"butten\" (click)='add(\"*\")'>*</button><br>\n<button id=\"butten\" (click)='add(\"%\")'>%</button>\n<button id=\"butten\" (click)='add(\"=\")'>=</button>\n\n</div>\n<div class=\"numbers\">\n<button id=\"butten\" (click)='add(\"1\")'>1</button>\n<button id=\"butten\" (click)='add(\"2\")'>2</button>\n<button id=\"butten\" (click)='add(\"3\")'>3</button><br>\n<button id=\"butten\" (click)='add(\"4\")'>4</button>\n<button id=\"butten\" (click)='add(\"5\")'>5</button>\n<button id=\"butten\" (click)='add(\"6\")'>6</button><br>\n<button id=\"butten\" (click)='add(\"7\")'>7</button>\n<button id=\"butten\" (click)='add(\"8\")'>8</button>\n<button id=\"butten\" (click)='add(\"9\")'>9</button><br>\n<button id=\"butten\" (click)='add(\"0\")'>0</button>\n</div>\n\n\n<h3>resulte: {{resulte}}</h3>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { InputerService } from 'src/app/serviees/inputer.service';\n\n@Component({\n  selector: 'app-ul-result',\n  templateUrl: './ul-result.component.html',\n  styleUrls: ['./ul-result.component.css']\n})\nexport class UlResultComponent implements OnInit {\n\n  constructor(public inputerSvc:InputerService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ul-result works!</p>\n<ul>\n    <li *ngFor=\"let x of inputerSvc.inputArr\">{{x}}</li>\n</ul>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputerService {\n\n  constructor() { }\n  inputArr:string[] = []\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}